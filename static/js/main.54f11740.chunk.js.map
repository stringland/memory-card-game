{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","cardFlipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEe,SAASA,EAAT,GAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAQlE,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAc,UAAY,GAA1C,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACIF,UAAU,OACVC,IAAI,iBACJE,QAbI,WACXJ,GACDF,EAAaD,IAYLM,IAAI,mBCbxB,IAAME,EAAa,CACjB,CAAE,IAAO,oBAAqBC,SAAS,GACvC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,kBAAmBA,SAAS,GACrC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,oBAAqBA,SAAS,GACvC,CAAE,IAAO,mBAAoBA,SAAS,IAmFzBC,MAhFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WACRP,MACC,IAGHO,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAC1B,GACpB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAGf,IAAMY,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,KAClCZ,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,oDACA,wBAAQG,QAASc,EAAjB,sBACA,wCAAWP,KACX,qBAAKV,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,YAAaF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC9DN,SAAUA,GAJLH,EAAK2B,aC7EtBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54f11740.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard({ card, handleChoice, cardFlipped, disabled }) {    // destructure card and handleChoice props from App\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={cardFlipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src} alt=\"Card front\" />\r\n                <img\r\n                    className=\"back\"\r\n                    src=\"/img/cover.png\"\r\n                    onClick={handleClick}\r\n                    alt=\"Card back\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\n// array of card images\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched: false },\n  { \"src\": \"/img/potion-1.png\", matched: false },\n  { \"src\": \"/img/ring-1.png\", matched: false },\n  { \"src\": \"/img/scroll-1.png\", matched: false },\n  { \"src\": \"/img/shield-1.png\", matched: false },\n  { \"src\": \"/img/sword-1.png\", matched: false },\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle cards, duplicate cards to get set of 12, assign random ID to each\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]      // 2 lots of card images\n      .sort(() => Math.random() - 0.5)                        // shuffled array\n      .map((card) => ({ ...card, id: Math.random() }))        // add on random ID number to each card\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  // handle a user choice, update choice one or two\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)        // if choiceOne is null (is false), update with setChoiceOne, else update choiceTwo with setChoiceTwo\n  }\n\n  // reset game automagically\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  // compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card;\n            }\n          })\n        })\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  // reset choices and increase number of turns\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <h5>A card memory game</h5>\n      <button onClick={shuffleCards}>New Game</button>\n      <p>Turns: {turns}</p>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            cardFlipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}